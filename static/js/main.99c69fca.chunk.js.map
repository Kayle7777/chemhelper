{"version":3,"sources":["components/AppBar.js","components/SearchBar.js","components/InfoPanel.js","components/ChemTable.js","components/TagCollapse.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_container","root","Object","defineProperty","width","breakpoints","down","display","container","position","marginLeft","marginRight","height","up","spacing","unit","text","content","bottom","nightModeSwitch","right","props","classes","react_default","a","createElement","index_es","className","variant","style","transform","padding","border","concat","palette","primary","main","borderRadius","marginBottom","margin","tagSearchButton","inputNoText","fontStyle","doHideButton","inputState","tagState","_inputState","slicedToArray","searchInput","typeSearch","_tagState","doTags","data-testid","placeholder","fullWidth","value","onChange","e","target","onClick","_e","prev","color","card","minHeight","marginTop","gutterBottom","name","optional","arguments","length","undefined","ifContent","info","notes","@global","*::-webkit-scrollbar","backgroundColor","-webkit-border-radius","*::-webkit-scrollbar:hover","*::-webkit-scrollbar-thumb:vertical","background","*::-webkit-scrollbar-thumb:vertical:active","highlight","type","secondary","lighten","light","dark","paperContainer","spacer","flex","actions","title","recipes","chemState","collapseState","_chemState","selectedChem","controlSelectChem","_useState","useState","direction","_useState2","orderBy","changeOrder","_collapseState","collapseIn","doCollapse","Fragment","placement","aria-label","icons_index_es","es","_ref","dist_default","data","recipeSort","columns","header","fitHeightToRows","fixedRowCount","isCellSelected","_column","rowData","isCellHovered","_hoveredColumn","hoveredRowData","id","orderDirection","onCellClick","cellClick","onHeaderClick","headerClick","includeHeaders","cell","sortDir","sort","b","nameA","toLowerCase","nameB","map","i","collapse","maxHeight","overflowY","zIndex","filterMsg","tags","tagStatePassed","open","_tagStatePassed","in","component","keys","category","react","key","row","item","control","checked","includes","tagCheckChange","label","replace","match","toUpperCase","filter","tag","toConsumableArray","Recipes","_button","leftContainer","infoPanel","button","recipeBox","hideButton","_useState3","_useState4","_useState5","_useState6","filteredRecipes","stateTags","recipe","recipeTagsList","checkMatchingInput","every","stateTag","some","recipeTag","checkMatchingTags","filterRecipes","_useState7","_useState8","_useState9","_useState10","components_AppBar","components_SearchBar","components_TagCollapse","components_ChemTable","components_InfoPanel","App","core_styles","createMuiTheme","typography","useNextVariants","grey","100","200","pages_Main","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99c69fca.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar as MuiAppBar, Toolbar, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    container: {\n        position: 'relative',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        height: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 1024 - theme.spacing.unit * 6,\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: 1140,\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750,\n        },\n    },\n    text: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    content: {\n        display: 'flex',\n        position: 'absolute',\n        bottom: 0,\n    },\n    nightModeSwitch: {\n        position: 'absolute',\n        right: 0,\n    },\n});\n\nconst AppBar = props => {\n    const { classes } = props;\n    return (\n        <MuiAppBar className={classes.root} position=\"static\">\n            <Toolbar className={classes.container} variant=\"dense\">\n                <div className={classes.content}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        ChemHelper\n                    </Typography>\n                    <Typography\n                        className={classes.text}\n                        variant=\"subtitle1\"\n                        style={{ transform: `translate(0px, 6px)` }}\n                    >\n                        A chemistry helper app for Space Station 13 Goonstation\n                    </Typography>\n                </div>\n            </Toolbar>\n        </MuiAppBar>\n    );\n};\n\nexport default withStyles(styles)(AppBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        padding: theme.spacing.unit / 3,\n        border: `1px solid ${theme.palette.primary.main}`,\n        borderRadius: theme.spacing.unit / 2,\n        height: '3rem',\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 3,\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    tagSearchButton: {\n        marginRight: theme.spacing.unit,\n    },\n    inputNoText: {\n        fontStyle: 'italic',\n    },\n});\n\nconst SearchBar = props => {\n    const { classes, doHideButton, inputState, tagState } = props;\n    const [searchInput, typeSearch] = inputState;\n    // eslint-disable-next-line\n    const [tagStates, doTags] = tagState;\n\n    return (\n        <div className={classes.container} data-testid=\"searchbar\">\n            {/* <Tooltip title=\"Filter by Tags\" placement=\"top\">\n                    <Button className={classes.tagSearchButton} variant=\"outlined\" onClick={filterCollapse}>\n                        Tags\n                    </Button>\n                </Tooltip> */}\n            <Input\n                className={!searchInput ? classes.inputNoText : ''}\n                placeholder=\"Search by name\"\n                fullWidth\n                value={searchInput}\n                onChange={inputType}\n            />\n            <Button onClick={resetButton}>Reset</Button>\n            <Button onClick={hideButton} color=\"secondary\">\n                Hide\n            </Button>\n        </div>\n    );\n\n    function inputType(e) {\n        const {\n            target: { value },\n        } = e;\n        return typeSearch(value);\n    }\n\n    function hideButton(_e) {\n        return doHideButton(prev => !prev);\n    }\n\n    function resetButton() {\n        typeSearch('');\n        return doTags([]);\n    }\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography, Table, TableBody, TableHead, TableRow, TableCell } from '@material-ui/core';\n\nconst styles = theme => ({\n    card: {\n        minHeight: '25rem',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n            marginTop: 0,\n        },\n    },\n});\n\nconst InfoPanel = props => {\n    const { classes, content } = props;\n    return (\n        <Card className={classes.card}>\n            {content && (\n                <CardContent>\n                    {/* \n                    DATA SCHEMA\n\n                    id: integer\n                    name: string\n                    tags: array of strings of tags\n                    info: OBJECT : {\n                        depletion_rate: float\n                        notes: array of strings of notes\n                        penetrates_skin: boolean\n                        per_cycle: array of strings of per cycle info\n                        __OPTIONAL__ overdose_threshhold: integer\n                        __OPTIONAL__ per_plant_cycle: array of strings of per plant cycle info\n                        __OPTIONAL__ units_to_infect: float\n                        __OPTIONAL__ addiction_probability_ingest: float\n                        __OPTIONAL__ application_effect: array of strings of info\n                    }\n                    __OPTIONAL__ ingredients: array of strings of names \n                            __DIFFERING DATA__ might be objects with \"parts\" values, key = name\n                    __OPTIONAL__ reaction_message: string\n                    __OPTIONAL__ sources: array of strings of sources\n                    __OPTIONAL__ heat_to: integer\n                */}\n                    <Typography gutterBottom variant=\"h5\">\n                        {content.name}\n                    </Typography>\n                    {ifContent(content.info.notes)}\n                    {content.info && (\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Depletion Rate</TableCell>\n                                    <TableCell>Skin Penetration</TableCell>\n                                    <TableCell>Per Cycle</TableCell>\n                                    <TableCell>Overdose Threshhold</TableCell>\n                                    <TableCell>Per Plant Cycle</TableCell>\n                                    <TableCell>Units to Infect</TableCell>\n                                    <TableCell>Addiction Probability</TableCell>\n                                    <TableCell>Application Effect</TableCell>\n                                </TableRow>\n                            </TableHead>\n                        </Table>\n                    )}\n                </CardContent>\n            )}\n        </Card>\n    );\n\n    function ifContent(optional, variant = 'subtitle1') {\n        return optional ? <Typography variant={variant}>{optional}</Typography> : '';\n    }\n};\n\nexport default withStyles(styles)(InfoPanel);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Toolbar, Typography, IconButton, Tooltip } from '@material-ui/core';\nimport { FilterList as FilterListIcon } from '@material-ui/icons';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport MuiTable from 'mui-virtualized-table';\nimport { AutoSizer } from 'react-virtualized';\n\nconst styles = theme => ({\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '7px',\n            height: '0px',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0.09)',\n        },\n        '*::-webkit-scrollbar-thumb:vertical': {\n            background: 'rgba(0, 0, 0, 0.5)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar-thumb:vertical:active': {\n            background: 'rgba(0, 0, 0, 0.61)',\n            '-webkit-border-radius': '100px',\n        },\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    paperContainer: {},\n    spacer: {\n        flex: '1 1 100%',\n    },\n    actions: {\n        color: theme.palette.text.secondary,\n    },\n    title: {\n        flex: '0 0 auto',\n    },\n});\n\nconst ChemTable = props => {\n    const { classes, recipes, chemState, collapseState } = props;\n    const [selectedChem, controlSelectChem] = chemState;\n    const [orderBy, changeOrder] = useState({ name: 'name', direction: true });\n    const [collapseIn, doCollapse] = collapseState;\n\n    return (\n        <>\n            <Toolbar>\n                <div className={classes.title}>\n                    <Typography variant=\"h6\">Chemical Table</Typography>\n                </div>\n                <div className={classes.spacer} />\n                <div className={classes.actions}>\n                    <Tooltip title=\"Filter list\" placement=\"top\">\n                        <IconButton aria-label=\"Filter List\" onClick={filterCollapse}>\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Toolbar>\n            <AutoSizer>\n                {({ width, height }) => (\n                    <Paper>\n                        <MuiTable\n                            data-testid=\"chemtable\"\n                            data={recipeSort(recipes, orderBy)}\n                            columns={[\n                                {\n                                    name: 'name',\n                                    header: 'Chemical',\n                                },\n                            ]}\n                            fitHeightToRows\n                            orderBy={orderBy.name}\n                            fixedRowCount={1}\n                            isCellSelected={(_column, rowData) => rowData === selectedChem}\n                            isCellHovered={(_column, rowData, _hoveredColumn, hoveredRowData) =>\n                                rowData !== undefined && rowData.id && rowData.id === hoveredRowData.id\n                            }\n                            orderDirection={orderBy.direction ? 'desc' : 'asc'}\n                            onCellClick={cellClick}\n                            onHeaderClick={headerClick}\n                            includeHeaders={true}\n                            width={width || 100}\n                            height={height || 100}\n                        />\n                    </Paper>\n                )}\n            </AutoSizer>\n        </>\n    );\n\n    function filterCollapse() {\n        return doCollapse(!collapseIn);\n    }\n\n    function cellClick(_column, cell) {\n        return controlSelectChem(cell);\n    }\n\n    function headerClick(header) {\n        return changeOrder(orderBy => {\n            orderBy.name = header.name;\n            orderBy.direction = !orderBy.direction;\n            return orderBy;\n        });\n    }\n\n    function recipeSort(recipes, orderBy) {\n        const sortDir = orderBy.direction ? -1 : 1;\n        return recipes\n            .sort((a, b) => {\n                const nameA = a.name.toLowerCase(),\n                    nameB = b.name.toLowerCase();\n                if (nameA < nameB) return sortDir;\n                if (nameA > nameB) return -sortDir;\n                return 0;\n            })\n            .map((e, i) => {\n                e.id = i + 1;\n                return e;\n            });\n    }\n};\n\nexport default withStyles(styles)(ChemTable);\n","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Collapse,\n    Card,\n    CardContent,\n    FormGroup,\n    FormControl,\n    FormLabel,\n    FormControlLabel,\n    Checkbox,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n    collapse: {\n        position: 'relative',\n        // width: '150%',\n        maxHeight: '40vh',\n        overflowY: 'scroll',\n        zIndex: 2,\n    },\n    collapseIn: {\n        marginBottom: theme.spacing.unit,\n    },\n    filterMsg: {\n        marginBottom: theme.spacing.unit,\n    },\n});\n\nconst TagCollapse = props => {\n    const { classes, tags, tagStatePassed, open } = props;\n    const [tagState, doTags] = tagStatePassed;\n\n    return (\n        <Collapse\n            data-testid={'collapse'}\n            className={open ? `${classes.collapse} ${classes.collapseIn}` : classes.collapse}\n            in={open}\n        >\n            <Card>\n                <CardContent>\n                    <FormControl component=\"fieldset\" margin=\"dense\">\n                        <FormLabel className={classes.filterMsg} component=\"legend\">\n                            Filter by Tags\n                        </FormLabel>\n                        <hr />\n                        {Object.keys(tags).map(category => {\n                            return (\n                                <Fragment key={`${category}-formgroup`}>\n                                    <FormLabel component=\"legend\">{category}</FormLabel>\n                                    <FormGroup row>\n                                        {Object.keys(tags[category]).map(item => {\n                                            // eslint-disable-next-line\n                                            const tagTextDescriptor = tags[category][item];\n                                            return (\n                                                <FormControlLabel\n                                                    key={`${category}-${item}-checkbox`}\n                                                    control={\n                                                        <Checkbox\n                                                            checked={tagState.includes(item)}\n                                                            onChange={tagCheckChange}\n                                                            value={item}\n                                                        />\n                                                    }\n                                                    label={item.replace(/./, match => match.toUpperCase())}\n                                                />\n                                            );\n                                        })}\n                                    </FormGroup>\n                                </Fragment>\n                            );\n                        })}\n                    </FormControl>\n                </CardContent>\n            </Card>\n        </Collapse>\n    );\n\n    function tagCheckChange(e) {\n        const {\n            target: { value },\n        } = e;\n        return doTags(tagState => {\n            if (tagState.includes(value)) tagState = tagState.filter(tag => tag !== value);\n            else tagState = [...tagState, value];\n            return tagState;\n        });\n    }\n};\n\nexport default withStyles(styles)(TagCollapse);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport AppBar from '../components/AppBar';\nimport SearchBar from '../components/SearchBar';\nimport InfoPanel from '../components/InfoPanel';\nimport ChemTable from '../components/ChemTable';\nimport Recipes from '../utils/recipes';\nimport TagCollapse from '../components/TagCollapse';\nconst { tags, recipes } = Recipes;\n\nconst styles = theme => ({\n    container: {\n        margin: 'auto',\n        height: '80vh',\n        [theme.breakpoints.up('md')]: {\n            width: 1140 + theme.spacing.unit * 4,\n            display: 'flex',\n            marginTop: '2rem',\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750 + theme.spacing.unit * 4,\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '100%',\n            height: '70vh',\n        },\n    },\n    leftContainer: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            marginLeft: theme.spacing.unit * 3,\n            marginRight: theme.spacing.unit * 1.5,\n        },\n    },\n    infoPanel: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing.unit * 1.5,\n            marginRight: theme.spacing.unit * 3,\n        },\n    },\n    button: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 2,\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: `calc(100% - ${theme.spacing.unit * 4}px)`,\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    recipeBox: {\n        overflowY: 'hidden',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: '50vh',\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [hideButton, doHideButton] = useState(true);\n    const [searchInput, typeSearch] = useState('');\n    const [tagState, doTags] = useState([]);\n    const filteredRecipes = filterRecipes(recipes, searchInput, tagState);\n    const [selectedChem, controlSelectChem] = useState(filteredRecipes[0]);\n    const [collapseIn, doCollapse] = useState(false);\n\n    return (\n        <>\n            <AppBar />\n            <div className={classes.container}>\n                {hideButton && (\n                    <div className={classes.leftContainer}>\n                        <SearchBar\n                            tagState={[tagState, doTags]}\n                            doHideButton={doHideButton}\n                            inputState={[searchInput, typeSearch]}\n                        />\n                        <TagCollapse tagStatePassed={[tagState, doTags]} tags={tags} open={collapseIn} />\n                        <div className={classes.recipeBox}>\n                            <ChemTable\n                                collapseState={[collapseIn, doCollapse]}\n                                recipes={filteredRecipes}\n                                chemState={[selectedChem, controlSelectChem]}\n                            />\n                        </div>\n                    </div>\n                )}\n                <div className={classes.infoPanel}>\n                    {!hideButton && (\n                        <Button\n                            data-testid=\"showsearch\"\n                            fullWidth\n                            onClick={() => doHideButton(prev => !prev)}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            className={classes.button}\n                        >\n                            Show Search\n                        </Button>\n                    )}\n                    <InfoPanel content={selectedChem} />\n                </div>\n            </div>\n        </>\n    );\n\n    function filterRecipes(recipes, searchInput, stateTags) {\n        return recipes.filter(recipe => {\n            const { name, tags: recipeTagsList } = recipe;\n            return checkMatchingInput(searchInput, name) && checkMatchingTags(stateTags, recipeTagsList);\n        });\n\n        function checkMatchingInput(searchInput, name) {\n            if (!searchInput) return true;\n            else return name.toLowerCase().includes(searchInput.toLowerCase());\n        }\n\n        function checkMatchingTags(stateTags, recipeTagsList) {\n            if (!stateTags.length) return true;\n            if (!recipeTagsList) return false;\n            else return stateTags.every(stateTag => recipeTagsList.some(recipeTag => recipeTag === stateTag));\n        }\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={switchTheme()}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nfunction switchTheme() {\n    const bg = {\n        typography: {\n            useNextVariants: true,\n        },\n        palette: { type: 'dark', grey: { 100: '#424242', 200: '#424242' } },\n    };\n    return createMuiTheme(bg);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}