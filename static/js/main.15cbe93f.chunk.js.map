{"version":3,"sources":["components/AppBar.js","components/SearchBar.js","components/InfoPanel.js","components/ChemList.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","Object","defineProperty","width","breakpoints","down","display","container","position","marginLeft","marginRight","height","up","text","spacing","unit","content","props","classes","react_default","a","createElement","className","index_es","variant","style","transform","_container","padding","border","concat","palette","primary","main","borderRadius","marginBottom","margin","fullWidth","card","overflowY","marginTop","leftContainer","infoPanel","Fragment","components_AppBar","components_SearchBar","components_ChemList","components_InfoPanel","createMuiTheme","type","typography","useNextVariants","App","core_styles","pages_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15cbe93f.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar as MuiAppBar, Toolbar, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    container: {\n        position: 'relative',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        height: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 1140,\n        },\n    },\n    text: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    content: {\n        position: 'absolute',\n        display: 'flex',\n    },\n});\n\nconst AppBar = props => {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <MuiAppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <div className={classes.container}>\n                        <div className={classes.content}>\n                            <Typography\n                                className={classes.text}\n                                style={{ transform: `translate(0px, -6px)` }}\n                                variant=\"h5\"\n                            >\n                                Breakpoints are c00l\n                            </Typography>\n                            <Typography className={classes.text} variant=\"subtitle1\">\n                                This is a test of the emergency test system\n                            </Typography>\n                        </div>\n                    </div>\n                </Toolbar>\n            </MuiAppBar>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(AppBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        padding: theme.spacing.unit / 3,\n        border: `1px solid ${theme.palette.primary.main}`,\n        borderRadius: theme.spacing.unit / 2,\n        height: '3rem',\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 3,\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst SearchBar = props => {\n    const { classes } = props;\n    return (\n        <div className={classes.container}>\n            <Button>Filter</Button>\n            <Input fullWidth />\n            <Button>Hide</Button>\n            <Button>Reset</Button>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    card: {\n        height: '25rem',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst InfoPanel = props => {\n    const { classes } = props;\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography>Test</Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default withStyles(styles)(InfoPanel);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n    card: {\n        height: 100,\n        overflowY: 'auto',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst ChemList = props => {\n    const { classes } = props;\n    return <Paper className={classes.card} />;\n};\n\nexport default withStyles(styles)(ChemList);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '../components/AppBar';\nimport SearchBar from '../components/SearchBar';\nimport InfoPanel from '../components/InfoPanel';\nimport ChemList from '../components/ChemList';\n\nconst styles = theme => ({\n    container: {\n        margin: 'auto',\n        [theme.breakpoints.up('md')]: {\n            width: 1140,\n            display: 'flex',\n            marginTop: '2rem',\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n        },\n    },\n    leftContainer: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing.unit * 3,\n            marginRight: theme.spacing.unit * 1.5,\n        },\n    },\n    infoPanel: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing.unit * 1.5,\n            marginRight: theme.spacing.unit * 3,\n        },\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    return (\n        <>\n            <AppBar />\n            <div className={classes.container}>\n                <div className={classes.leftContainer}>\n                    <SearchBar />\n                    <ChemList />\n                </div>\n                <div className={classes.infoPanel}>\n                    <InfoPanel />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst App = props => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Main />\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}