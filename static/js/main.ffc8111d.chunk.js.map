{"version":3,"sources":["components/AppBar.js","components/SearchBar.js","components/InfoPanel.js","components/ChemTable.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_container","root","Object","defineProperty","width","breakpoints","down","display","container","position","marginLeft","marginRight","height","up","spacing","unit","text","content","bottom","nightModeSwitch","right","props","classes","_useContext","useContext","ToggleContext","_useContext2","slicedToArray","paletteType","toggleType","react_default","a","createElement","index_es","className","variant","style","transform","color","control","checked","onChange","value","label","TagPopover","tags","anchorState","_anchorState","popoverAnchor","controlPopover","popover","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","JSON","stringify","padding","border","concat","palette","primary","main","borderRadius","marginBottom","margin","marginTop","doHideButton","inputState","_useState","useState","_useState2","_inputState","searchInput","typeSearch","SearchBar_TagPopover","onClick","e","currentTarget","fullWidth","target","prev","card","@global","*::-webkit-scrollbar","backgroundColor","-webkit-border-radius","*::-webkit-scrollbar:hover","*::-webkit-scrollbar-thumb:vertical","background","*::-webkit-scrollbar-thumb:vertical:active","highlight","type","secondary","lighten","light","dark","recipes","controlSelectChem","name","direction","orderBy","changeOrder","es","_ref","dist_default","data-testid","data","recipeSort","columns","header","fitHeightToRows","isCellHovered","column","rowData","hoveredColumn","hoveredRowData","id","orderDirection","onCellClick","cellClick","onHeaderClick","headerClick","includeHeaders","cell","sortDir","sort","b","nameA","toLowerCase","nameB","map","i","Recipes","_leftContainer","_button","leftContainer","infoPanel","button","recipeBox","overflowY","hideButton","_useState3","_useState4","filteredRecipes","filter","each","includes","filterRecipes","_useState5","_useState6","selectedChem","Fragment","components_AppBar","components_SearchBar","components_ChemTable","components_InfoPanel","createContext","switchTheme","bg","typography","useNextVariants","grey","200","createMuiTheme","App","core_styles","Provider","pages_Main","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffc8111d.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar as MuiAppBar, Toolbar, Typography, Switch, FormControlLabel } from '@material-ui/core';\nimport { ToggleContext } from '../App';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    container: {\n        position: 'relative',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        height: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 1024 - theme.spacing.unit * 6,\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: 1140,\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750,\n        },\n    },\n    text: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    content: {\n        display: 'flex',\n        position: 'absolute',\n        bottom: 0,\n    },\n    nightModeSwitch: {\n        position: 'absolute',\n        right: 0,\n    },\n});\n\nconst AppBar = props => {\n    const { classes } = props;\n    const [paletteType, toggleType] = useContext(ToggleContext);\n    return (\n        <MuiAppBar className={classes.root} position=\"static\">\n            <Toolbar className={classes.container} variant=\"dense\">\n                <div className={classes.content}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        ChemHelper\n                    </Typography>\n                    <Typography\n                        className={classes.text}\n                        variant=\"subtitle1\"\n                        style={{ transform: `translate(0px, 6px)` }}\n                    >\n                        A chemistry helper app for Space Station 13 Goonstation\n                    </Typography>\n                </div>\n                <FormControlLabel\n                    className={classes.nightModeSwitch}\n                    color=\"primary\"\n                    control={\n                        <Switch checked={paletteType} onChange={() => toggleType(!paletteType)} value={paletteType} />\n                    }\n                    label=\"Night Mode\"\n                />\n            </Toolbar>\n        </MuiAppBar>\n    );\n};\n\nexport default withStyles(styles)(AppBar);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Input, Popover, Card, CardContent } from '@material-ui/core';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        padding: theme.spacing.unit / 3,\n        border: `1px solid ${theme.palette.primary.main}`,\n        borderRadius: theme.spacing.unit / 2,\n        height: '3rem',\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 3,\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    popover: {\n        marginTop: theme.spacing.unit,\n    },\n});\n\nconst TagPopover = props => {\n    const { classes, tags, anchorState } = props;\n    const [popoverAnchor, controlPopover] = anchorState;\n    return (\n        <Popover\n            className={classes.popover}\n            open={Boolean(popoverAnchor)}\n            anchorEl={popoverAnchor}\n            onClose={() => controlPopover(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n        >\n            <Card>\n                <CardContent>{JSON.stringify(tags)}</CardContent>\n            </Card>\n        </Popover>\n    );\n};\n\nconst SearchBar = props => {\n    const { classes, doHideButton, tags, inputState } = props;\n    const [popoverAnchor, controlPopover] = useState(null);\n    const [searchInput, typeSearch] = inputState;\n\n    return (\n        <div className={classes.container}>\n            <TagPopover classes={classes} tags={tags} anchorState={[popoverAnchor, controlPopover]} />\n            <Button onClick={e => controlPopover(e.currentTarget)}>Filter</Button>\n            <Input fullWidth value={searchInput} onChange={inputType} />\n            <Button onClick={() => doHideButton(prev => !prev)} color=\"secondary\">\n                Hide\n            </Button>\n            <Button>Reset</Button>\n        </div>\n    );\n\n    function inputType(e) {\n        const {\n            target: { value },\n        } = e;\n        return typeSearch(value);\n    }\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    card: {\n        height: '25rem',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n            marginTop: 0,\n        },\n    },\n});\n\nconst InfoPanel = props => {\n    const { classes, content } = props;\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography>{JSON.stringify(content)}</Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default withStyles(styles)(InfoPanel);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport MuiTable from 'mui-virtualized-table';\nimport { AutoSizer } from 'react-virtualized';\n\nconst styles = theme => ({\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '7px',\n            height: '0px',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0.09)',\n        },\n        '*::-webkit-scrollbar-thumb:vertical': {\n            background: 'rgba(0, 0, 0, 0.5)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar-thumb:vertical:active': {\n            background: 'rgba(0, 0, 0, 0.61)',\n            '-webkit-border-radius': '100px',\n        },\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n});\n\nconst ChemTable = props => {\n    const { recipes, controlSelectChem } = props;\n    const [orderBy, changeOrder] = useState({ name: 'name', direction: true });\n    return (\n        <AutoSizer>\n            {({ width, height }) => (\n                <MuiTable\n                    data-testid=\"autosizer-table\"\n                    data={recipeSort(recipes, orderBy)}\n                    columns={[\n                        {\n                            name: 'name',\n                            header: 'Chemical',\n                        },\n                    ]}\n                    fitHeightToRows\n                    orderBy={orderBy.name}\n                    // eslint-disable-next-line\n                    isCellHovered={(column, rowData, hoveredColumn, hoveredRowData) =>\n                        rowData.id && rowData.id === hoveredRowData.id\n                    }\n                    orderDirection={orderBy.direction ? 'desc' : 'asc'}\n                    onCellClick={cellClick}\n                    onHeaderClick={headerClick}\n                    includeHeaders={true}\n                    width={width}\n                    height={height}\n                />\n            )}\n        </AutoSizer>\n    );\n\n    function cellClick(column, cell) {\n        return controlSelectChem(cell);\n    }\n\n    function headerClick(header) {\n        return changeOrder(orderBy => {\n            orderBy.name = header.name;\n            orderBy.direction = !orderBy.direction;\n            return orderBy;\n        });\n    }\n\n    function recipeSort(recipes, orderBy) {\n        const sortDir = orderBy.direction ? -1 : 1;\n        return recipes\n            .sort((a, b) => {\n                const nameA = a.name.toLowerCase(),\n                    nameB = b.name.toLowerCase();\n                if (nameA < nameB) return sortDir;\n                if (nameA > nameB) return -sortDir;\n                return 0;\n            })\n            .map((e, i) => {\n                e.id = i + 1;\n                return e;\n            });\n    }\n};\n\nexport default withStyles(styles)(ChemTable);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport AppBar from '../components/AppBar';\nimport SearchBar from '../components/SearchBar';\nimport InfoPanel from '../components/InfoPanel';\nimport ChemTable from '../components/ChemTable';\nimport Recipes from '../utils/recipes';\nconst { tags, recipes } = Recipes;\n\nconst styles = theme => ({\n    container: {\n        margin: 'auto',\n        height: '82vh',\n        [theme.breakpoints.up('md')]: {\n            width: 1140 + theme.spacing.unit * 4,\n            display: 'flex',\n            marginTop: '2rem',\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750 + theme.spacing.unit * 4,\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n        },\n    },\n    leftContainer: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            marginLeft: theme.spacing.unit * 3,\n            marginRight: theme.spacing.unit * 1.5,\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: '25%',\n        },\n    },\n    infoPanel: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing.unit * 1.5,\n            marginRight: theme.spacing.unit * 3,\n        },\n    },\n    button: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 2,\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: `calc(100% - ${theme.spacing.unit * 4}px)`,\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    recipeBox: {\n        overflowY: 'hidden',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: '50vh',\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [hideButton, doHideButton] = useState(true);\n    const [searchInput, typeSearch] = useState('');\n    const filteredRecipes = filterRecipes(recipes, searchInput);\n    const [selectedChem, controlSelectChem] = useState(filteredRecipes[0]);\n\n    return (\n        <>\n            <AppBar />\n            <div className={classes.container}>\n                {hideButton && (\n                    <div className={classes.leftContainer}>\n                        <SearchBar doHideButton={doHideButton} tags={tags} inputState={[searchInput, typeSearch]} />\n                        <div className={classes.recipeBox}>\n                            <ChemTable recipes={filteredRecipes} controlSelectChem={controlSelectChem} />\n                        </div>\n                    </div>\n                )}\n                <div className={classes.infoPanel}>\n                    {!hideButton && (\n                        <Button\n                            fullWidth\n                            onClick={() => doHideButton(prev => !prev)}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            className={classes.button}\n                        >\n                            Show Search\n                        </Button>\n                    )}\n                    <InfoPanel content={selectedChem} />\n                </div>\n            </div>\n        </>\n    );\n\n    function filterRecipes(recipes, searchInput) {\n        if (!searchInput) return recipes;\n        recipes = recipes.filter(each => each.name.toLowerCase().includes(searchInput.toLowerCase()));\n        // More here to sort via tags from popover in searchBar\n\n        return recipes;\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React, { useState, createContext } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nexport const ToggleContext = createContext();\n\nconst App = props => {\n    const [paletteType, toggleType] = useState(true);\n    return (\n        <MuiThemeProvider theme={switchTheme(paletteType)}>\n            <CssBaseline />\n            <ToggleContext.Provider value={[paletteType, toggleType]}>\n                <Main />\n            </ToggleContext.Provider>\n        </MuiThemeProvider>\n    );\n};\n\nfunction switchTheme(paletteType) {\n    const bg = {\n        typography: {\n            useNextVariants: true,\n        },\n    };\n    if (paletteType) {\n        bg.palette = { type: 'dark' };\n        bg.palette.grey = { 200: '#424242' };\n    }\n    return createMuiTheme(bg);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}