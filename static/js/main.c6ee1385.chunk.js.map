{"version":3,"sources":["components/AppBar.js","components/SearchBar.js","components/InfoPanel.js","components/ChemTable.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_container","root","Object","defineProperty","width","breakpoints","down","display","container","position","marginLeft","marginRight","height","up","spacing","unit","text","content","bottom","nightModeSwitch","right","props","classes","_useContext","useContext","ToggleContext","_useContext2","slicedToArray","paletteType","toggleType","react_default","a","createElement","index_es","className","variant","style","transform","color","control","checked","onChange","value","label","TagPopover","tags","anchorState","tagStatePassed","_tagStatePassed","tagState","doTags","_anchorState","popoverAnchor","controlPopover","popover","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","cardContainer","component","keys","map","e","key","concat","includes","tagCheckChange","replace","match","toUpperCase","target","filter","tag","toConsumableArray","padding","border","palette","primary","main","borderRadius","marginBottom","margin","marginTop","doHideButton","inputState","_useState","useState","_useState2","_inputState","searchInput","typeSearch","_tagState","SearchBar_TagPopover","onClick","currentTarget","fullWidth","prev","card","minHeight","JSON","stringify","@global","*::-webkit-scrollbar","backgroundColor","-webkit-border-radius","*::-webkit-scrollbar:hover","*::-webkit-scrollbar-thumb:vertical","background","*::-webkit-scrollbar-thumb:vertical:active","highlight","type","secondary","lighten","light","dark","paperContainer","recipes","chemState","_chemState","selectedChem","controlSelectChem","name","direction","orderBy","changeOrder","es","_ref","dist_default","data-testid","data","recipeSort","columns","header","fitHeightToRows","fixedRowCount","isCellSelected","_column","rowData","isCellHovered","_hoveredColumn","hoveredRowData","undefined","id","orderDirection","onCellClick","cellClick","onHeaderClick","headerClick","includeHeaders","column","cell","sortDir","sort","b","nameA","toLowerCase","nameB","i","Recipes","_leftContainer","_button","leftContainer","infoPanel","button","recipeBox","overflowY","hideButton","_useState3","_useState4","_useState5","_useState6","filteredRecipes","stateTags","recipe","recipeTagsList","checkMatchInput","length","every","stateTag","some","recipeTag","checkMatchTags","filterRecipes","_useState7","_useState8","Fragment","components_AppBar","components_SearchBar","components_ChemTable","components_InfoPanel","createContext","switchTheme","bg","typography","useNextVariants","grey","100","200","createMuiTheme","App","core_styles","Provider","pages_Main","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6ee1385.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar as MuiAppBar, Toolbar, Typography, Switch, FormControlLabel } from '@material-ui/core';\nimport { ToggleContext } from '../App';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    container: {\n        position: 'relative',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        height: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 1024 - theme.spacing.unit * 6,\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: 1140,\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750,\n        },\n    },\n    text: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    content: {\n        display: 'flex',\n        position: 'absolute',\n        bottom: 0,\n    },\n    nightModeSwitch: {\n        position: 'absolute',\n        right: 0,\n    },\n});\n\nconst AppBar = props => {\n    const { classes } = props;\n    const [paletteType, toggleType] = useContext(ToggleContext);\n    return (\n        <MuiAppBar className={classes.root} position=\"static\">\n            <Toolbar className={classes.container} variant=\"dense\">\n                <div className={classes.content}>\n                    <Typography className={classes.text} variant=\"h5\">\n                        ChemHelper\n                    </Typography>\n                    <Typography\n                        className={classes.text}\n                        variant=\"subtitle1\"\n                        style={{ transform: `translate(0px, 6px)` }}\n                    >\n                        A chemistry helper app for Space Station 13 Goonstation\n                    </Typography>\n                </div>\n                <FormControlLabel\n                    className={classes.nightModeSwitch}\n                    color=\"primary\"\n                    control={\n                        <Switch checked={paletteType} onChange={() => toggleType(!paletteType)} value={paletteType} />\n                    }\n                    label=\"Night Mode\"\n                />\n            </Toolbar>\n        </MuiAppBar>\n    );\n};\n\nexport default withStyles(styles)(AppBar);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Input,\n    Popover,\n    Card,\n    CardContent,\n    FormGroup,\n    FormControl,\n    FormLabel,\n    FormControlLabel,\n    FormHelperText,\n    Checkbox,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        padding: theme.spacing.unit / 3,\n        border: `1px solid ${theme.palette.primary.main}`,\n        borderRadius: theme.spacing.unit / 2,\n        height: '3rem',\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 3,\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    popover: {\n        marginTop: theme.spacing.unit,\n    },\n    cardContainer: {\n        position: 'relative',\n    },\n});\n\nconst SearchBar = props => {\n    const { classes, doHideButton, tags, inputState, tagState } = props;\n    const [popoverAnchor, controlPopover] = useState(null);\n    const [searchInput, typeSearch] = inputState;\n    const [tagStates, doTags] = tagState;\n\n    return (\n        <div className={classes.container}>\n            <TagPopover\n                tagStatePassed={tagState}\n                classes={classes}\n                tags={tags}\n                anchorState={[popoverAnchor, controlPopover]}\n            />\n            <Button onClick={e => controlPopover(e.currentTarget)}>Filter</Button>\n            <Input fullWidth value={searchInput} onChange={inputType} />\n            <Button onClick={() => doHideButton(prev => !prev)} color=\"secondary\">\n                Hide\n            </Button>\n            <Button\n                onClick={() => {\n                    typeSearch('');\n                    return doTags([]);\n                }}\n            >\n                Reset\n            </Button>\n        </div>\n    );\n\n    function inputType(e) {\n        const {\n            target: { value },\n        } = e;\n        return typeSearch(value);\n    }\n};\n\nconst TagPopover = props => {\n    const { classes, tags, anchorState, tagStatePassed } = props;\n    const [tagState, doTags] = tagStatePassed;\n    const [popoverAnchor, controlPopover] = anchorState;\n    return (\n        <Popover\n            className={classes.popover}\n            open={Boolean(popoverAnchor)}\n            anchorEl={popoverAnchor}\n            onClose={() => controlPopover(null)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n        >\n            <Card className={classes.cardContainer}>\n                <CardContent>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Filter by Tags</FormLabel>\n                        <FormGroup>\n                            {Object.keys(tags).map(e => {\n                                return (\n                                    <FormControlLabel\n                                        key={`${e}-form-control`}\n                                        control={\n                                            <Checkbox\n                                                checked={tagState.includes(e)}\n                                                onChange={tagCheckChange}\n                                                value={e}\n                                            />\n                                        }\n                                        label={e.replace(/./, match => match.toUpperCase())}\n                                    />\n                                );\n                            })}\n                        </FormGroup>\n                    </FormControl>\n                </CardContent>\n            </Card>\n        </Popover>\n    );\n\n    function tagCheckChange(e) {\n        const {\n            target: { value },\n        } = e;\n        return doTags(tagState => {\n            if (tagState.includes(value)) tagState = tagState.filter(tag => tag !== value);\n            else tagState = [...tagState, value];\n            return tagState;\n        });\n    }\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    card: {\n        minHeight: '25rem',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing.unit * 2,\n            marginTop: 0,\n        },\n    },\n});\n\nconst InfoPanel = props => {\n    const { classes, content } = props;\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography>{JSON.stringify(content)}</Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default withStyles(styles)(InfoPanel);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport MuiTable from 'mui-virtualized-table';\nimport { AutoSizer } from 'react-virtualized';\n\nconst styles = theme => ({\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '7px',\n            height: '0px',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0.09)',\n        },\n        '*::-webkit-scrollbar-thumb:vertical': {\n            background: 'rgba(0, 0, 0, 0.5)',\n            '-webkit-border-radius': '100px',\n        },\n        '*::-webkit-scrollbar-thumb:vertical:active': {\n            background: 'rgba(0, 0, 0, 0.61)',\n            '-webkit-border-radius': '100px',\n        },\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    paperContainer: {},\n});\n\nconst ChemTable = props => {\n    const { recipes, chemState } = props;\n    const [selectedChem, controlSelectChem] = chemState;\n    const [orderBy, changeOrder] = useState({ name: 'name', direction: true });\n    return (\n        <AutoSizer>\n            {({ width, height }) => (\n                <Paper>\n                    <MuiTable\n                        data-testid=\"autosizer-table\"\n                        data={recipeSort(recipes, orderBy)}\n                        columns={[\n                            {\n                                name: 'name',\n                                header: 'Chemical',\n                            },\n                        ]}\n                        fitHeightToRows\n                        orderBy={orderBy.name}\n                        fixedRowCount={1}\n                        isCellSelected={(_column, rowData) => rowData === selectedChem}\n                        isCellHovered={(_column, rowData, _hoveredColumn, hoveredRowData) =>\n                            rowData !== undefined && rowData.id && rowData.id === hoveredRowData.id\n                        }\n                        orderDirection={orderBy.direction ? 'desc' : 'asc'}\n                        onCellClick={cellClick}\n                        onHeaderClick={headerClick}\n                        includeHeaders={true}\n                        width={width}\n                        height={height}\n                    />\n                </Paper>\n            )}\n        </AutoSizer>\n    );\n\n    function cellClick(column, cell) {\n        return controlSelectChem(cell);\n    }\n\n    function headerClick(header) {\n        return changeOrder(orderBy => {\n            orderBy.name = header.name;\n            orderBy.direction = !orderBy.direction;\n            return orderBy;\n        });\n    }\n\n    function recipeSort(recipes, orderBy) {\n        const sortDir = orderBy.direction ? -1 : 1;\n        return recipes\n            .sort((a, b) => {\n                const nameA = a.name.toLowerCase(),\n                    nameB = b.name.toLowerCase();\n                if (nameA < nameB) return sortDir;\n                if (nameA > nameB) return -sortDir;\n                return 0;\n            })\n            .map((e, i) => {\n                e.id = i + 1;\n                return e;\n            });\n    }\n};\n\nexport default withStyles(styles)(ChemTable);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport AppBar from '../components/AppBar';\nimport SearchBar from '../components/SearchBar';\nimport InfoPanel from '../components/InfoPanel';\nimport ChemTable from '../components/ChemTable';\nimport Recipes from '../utils/recipes';\nconst { tags, recipes } = Recipes;\n\nconst styles = theme => ({\n    container: {\n        margin: 'auto',\n        height: '80vh',\n        [theme.breakpoints.up('md')]: {\n            width: 1140 + theme.spacing.unit * 4,\n            display: 'flex',\n            marginTop: '2rem',\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: 1750 + theme.spacing.unit * 4,\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '100%',\n            height: '70vh',\n        },\n    },\n    leftContainer: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            marginLeft: theme.spacing.unit * 3,\n            marginRight: theme.spacing.unit * 1.5,\n        },\n        [theme.breakpoints.up('xl')]: {\n            width: '25%',\n        },\n    },\n    infoPanel: {\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing.unit * 1.5,\n            marginRight: theme.spacing.unit * 3,\n        },\n    },\n    button: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 2,\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: `calc(100% - ${theme.spacing.unit * 4}px)`,\n            margin: theme.spacing.unit * 2,\n        },\n    },\n    recipeBox: {\n        overflowY: 'hidden',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: '50vh',\n            margin: theme.spacing.unit * 2,\n        },\n    },\n});\n\nconst Main = props => {\n    const { classes } = props;\n    const [hideButton, doHideButton] = useState(true);\n    const [searchInput, typeSearch] = useState('syn');\n    const [tagState, doTags] = useState(['heal']);\n    const filteredRecipes = filterRecipes(recipes, searchInput, tagState);\n\n    const [selectedChem, controlSelectChem] = useState(filteredRecipes[0]);\n\n    return (\n        <>\n            <AppBar />\n            <div className={classes.container}>\n                {hideButton && (\n                    <div className={classes.leftContainer}>\n                        <SearchBar\n                            tagState={[tagState, doTags]}\n                            doHideButton={doHideButton}\n                            tags={tags}\n                            inputState={[searchInput, typeSearch]}\n                        />\n                        <div className={classes.recipeBox}>\n                            <ChemTable recipes={filteredRecipes} chemState={[selectedChem, controlSelectChem]} />\n                        </div>\n                    </div>\n                )}\n                <div className={classes.infoPanel}>\n                    {!hideButton && (\n                        <Button\n                            fullWidth\n                            onClick={() => doHideButton(prev => !prev)}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            className={classes.button}\n                        >\n                            Show Search\n                        </Button>\n                    )}\n                    <InfoPanel content={selectedChem} />\n                </div>\n            </div>\n        </>\n    );\n\n    function filterRecipes(recipes, searchInput, stateTags) {\n        return recipes.filter(recipe => {\n            const { name, tags: recipeTagsList } = recipe;\n            return checkMatchInput(searchInput, name) && checkMatchTags(stateTags, recipeTagsList);\n        });\n\n        function checkMatchInput(searchInput, name) {\n            if (!searchInput) return true;\n            else {\n                return name.toLowerCase().includes(searchInput.toLowerCase());\n            }\n        }\n\n        function checkMatchTags(stateTags, recipeTagsList) {\n            if (!stateTags.length) return true;\n            if (!recipeTagsList) return false;\n            else return stateTags.every(stateTag => recipeTagsList.some(recipeTag => recipeTag === stateTag));\n        }\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React, { useState, createContext } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './pages/Main';\n\nexport const ToggleContext = createContext();\n\nconst App = props => {\n    const [paletteType, toggleType] = useState(true);\n    return (\n        <MuiThemeProvider theme={switchTheme(paletteType)}>\n            <CssBaseline />\n            <ToggleContext.Provider value={[paletteType, toggleType]}>\n                <Main />\n            </ToggleContext.Provider>\n        </MuiThemeProvider>\n    );\n};\n\nfunction switchTheme(paletteType) {\n    const bg = {\n        typography: {\n            useNextVariants: true,\n        },\n    };\n    if (paletteType) {\n        bg.palette = { type: 'dark' };\n        bg.palette.grey = { 100: '#424242', 200: '#424242' };\n    }\n    return createMuiTheme(bg);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}